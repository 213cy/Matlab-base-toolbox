xy=[1.0365	0.4973;
1.0699	0.5029;
1.1038	0.5085;
1.1383	0.5142;
1.1732	0.5198;
1.2087	0.5255;
1.2448	0.5311;
1.2815	0.5368
1.3189	0.5426;
1.3568	0.5483;
1.3955	0.5541;
1.4349	0.5598;
1.4751	0.5657;
1.516	0.5715;
1.5577	0.5774;
1.6003	0.5833;
1.6438	0.5892;
1.6882	0.5952;
1.7337	0.6013;
1.7801	0.6074;
1.8277	0.6135];
hold on
plot(xy(:,1),xy(:,2)),plot(0,0,'x'),plot(xy(:,1),xy(:,2),'x')
axis equal
%%
% 太阳直射点纬度(日期)：
N_datenum=datenum([2015,4,18]);
%要想获得精确结果时间的处理是很重要的，
% 因为北京时间和gmt时间的夏至正好跨了两天
% 所以如果用夏至时间对太阳直射纬度进行计算
%一定要使用格林尼治时间的夏至时间作为参考时间
%详见polesun2shadow
%
% 太阳直射点绝对经度角向量：
time=(14+42/60:3/60:15+42/60)-8;%格林尼治时间 G.M.T.
Et_absolute=2*pi*(12-time')/24;%太阳直射点的经度转弧度
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
x0=[0;0];
global calobjval calcoord
calcoord = 4
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 优化时 使用第一种目标计算方法
calobjval= 1  %目标函数的第一种计算方法
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 优化时 使用第二种目标计算方法(需要图像处理工具箱）
%calobjval= 2  %目标函数的第二种计算方法
% 这种方法会遇到很多局部极小值点，对于求出最终结果来说不是很好
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%
[x,fval,exitflag,output] = fmincon(@(x) objfun(x(1),x(2),N_datenum,Et_absolute,xy,time),...
    x0,[],[],[],[],[-pi/2;-pi],[pi/2;pi]);
x
disp('北纬n: ')
disp(degrees2dms( rad2deg(x(1)) ))%xy平面夹角弧度转北纬度分秒
disp('东经e: ')
disp(degrees2dms( rad2deg(x(2)) ))%xz平面夹角弧度转东经度分秒
%%
XY=polesun2shadow_4(x(1),x(2),N_datenum,Et_absolute,time);
[val,Tmat,L,theta,vec]=findmat(XY,xy);
fval-val% 检验
XY_new=bsxfun(@plus,XY*Tmat,vec);
hold on;
plot(XY(:,1),XY(:,2),'m'),plot(0,0,'mo')
plot(XY_new(:,1),XY_new(:,2),'mo')
%%
[val,Tmat,L,theta,vec]=findmat_2(XY,xy);
fval-val% 检验
XY_new=bsxfun(@plus,XY*Tmat,vec);
hold on;
plot(XY(:,1),XY(:,2),'r'),
plot(XY_new(:,1),XY_new(:,2),'rs')
%%
xobj=[pi*18.3/180;pi*109/180]

