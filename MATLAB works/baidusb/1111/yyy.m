% 侧面积一定的长方体最大体积

给你一块面积一定的铁皮，通过将这块铁皮裁剪成条后，用铁皮条围出任意上表面的一块体积

（只围四周）。该形体的最大面积是多少？

设 围成圆柱，则2×pi×r×h=S（常数）--------此式说明高h越小，半径r越大，半径r可以无穷大

V=pi×r×r×h=S*r   -----------r无穷大时 V无穷大

 

------------------------------------------------

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

加百利的号角 （托里拆利小号）  Gabriel's Horn (also called Torricelli's trumpet)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 

%%%%%%%%%%%%%%%%%%%

len=9;
y=1./(1:.3:len);

[X,Y,Z] = cylinder(y);
b=surf((len-1)*Z+1,Y,X);axis equal

set(b,'LineSmoothing','on')

%%%%%%%%%%%%%%%%%%%

y=1/x在[1,+∞)上的图象沿x轴旋转一周所产生的的旋转体。





 







 

从内部灌满只需要有限的油漆，而在外表面刷一层无论多薄的油漆层都需要无限多的油漆才能完成？

把一张纸卷成圆柱,则其体积一定，可以塞进我的笔筒。

将纸张保持面积不变，减小厚度，则其卷成的圆柱体积变小，依然可以塞进我的笔筒。

所以给我规定一个任意大表面积的纸张，我都可以给这张纸设置一个足够小的厚度，

然后把它卷起来塞进我的笔筒。甚至我还可以保证将纸张塞进去后，笔筒还能空出任意有限的体积来。

 

故而，我可以在一个有限的体积内找到一个无穷大的面。哪怕给定的体积很小。

甚至， 给我一个很小的体积 只要这个体积不为零。我可以在其中找到 有限多个 无穷大的面。

实际上在有限的体积内 存在 无穷多个 无穷大表面积的面。

就像无穷大饭店 可以安排下 无穷多个 无穷大旅行团一样。

 

饭店房间号：  k=1,2,3...∈N+

旅行团编号：  m=1,2,3...∈N+

某个旅行团团员编号：       n=1,2,3...∈N+

 

找到对应关系 k=f(m,n) 使得给定一个k只有唯一的整数对(m1,n1)与之相对应

这样的关系有很多，比较容易想到的简单的分配方式是

一直分剩余房间的 的奇数位置的房间 给下一个旅行团

 

这样的话 给第m个旅行团第n个团员分配的房间是 k=2^(m-1)+(n-1)* 2^m =(n-0.5)*2^m

 

------------------------------------------------

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%
a=100;
S=6*a^2;

objfun = @(x) -prod(x);


nonlcon = @(x) deal([],2*(x(1)+x(2))*x(3)-S);
[x,fval,exitflag] = fmincon(objfun,2*a*ones(3,1),[],[],[],[],[],[],nonlcon)

[x,fval,exitflag] = ga(objfun,3,[],[],[],[],0,99999,nonlcon)


 

%%
figure
hold on
box on
view([1 -0.7 .2]);
xlabel('x');ylabel('y');zlabel('z');

axis([0 10 0 10 0 10 ])
axis equal; camlight; lighting gouraud


Fcolor=cool(5);
isovalue=40:40:140;

[x,y,z] = meshgrid(0:1:10);       % 画图范围
f = @(x,y,z) x.*y.*z;      % 函数表达式
v = f(x,y,z);


for k=1:5
h = patch(isosurface(x,y,z,v,k*100-50),...
    'FaceColor',Fcolor(k,:),...
    'FaceAlpha',0.2,...
    'EdgeColor','none');
isonormals(x,y,z,v,h)
end
%%

f2= @(x,y,z) (x+y).*z;
v2= f2(x,y,z);
h = patch(isosurface(x,y,z,v2,50),...
    'FaceColor','r',...
    'FaceAlpha',0.8);
isonormals(x,y,z,v2,h)
            
%view([1 -1 0])