% 高维超立方体的平行投影和中心投影（透视）。perspective and projection of hypercube ， Vanishing Point
%n维空间的超立方体

%n维空间的超立方体
%n维立方体，
%共有2^n个顶点（每个方向上只有两个坐标待选，每个方向上取一个坐标的全组合）
%共有n×2^(n-1)个棱(棱共有n个方向×其余每个方向可选的两个坐标中取一个的全组合）
%               可见 1，每个方向上都可以找到2^(n-1)条棱相互平行。
%                    2，平面透视的结果中最多可以找到n个灭点。
%                       由于最多两个方向与透视平面平行，所以透视的结果中最少有n-2个灭点
%                    3，4维正立方体，共有16个顶点，32条棱。每8条相互平行的棱为1组，共有4组
%                       平面透视的结果中最多有4个灭点，最少有2个灭点。
%共有nchoosek(n,2)×2^(n-2)个面（面共有nchoosek(n,2)个法向量×其余每个方向可选的两个坐标中取一个的全组合）
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
dbstop if error
%%
clm=3;
for n=3:5;%n是维数（2,3,4...），任意大于1的正整数
    %%
    clear vert
k=2^n;

fac=kron(dec2bin(0:k/2-1)-'0',[1;1]);
lin=zeros(k,1);
lin(2:2:end)=1;
con=[lin,fac];

vert=zeros(n*k,n);
for m=1:n
    %生成高维空间的顶点对，用于画棱
    vert(1+(m-1)*k:m*k,:)=circshift(con,[0,m-1]);
end


%%  平行投影
%---------------------
%平行投影不会产生灭点
%一般情况是将顶点坐标先旋转（otrh(rand(n))）和平移（每列都加相同常数）
%以上两种变换可以在用齐次坐标运算
%然后要得到正投影乘eye(n,2),要得到斜投影乘randn(n,2)
%如，vet=vert*otrh(rand(n))*randn(n,2)，（这是一个旋转后斜投影的例子）
%实际（下一行）的算法是保证立方体中心在投影正中的斜投影
vet=(vert-.5)*randn(n,2);%建立高维空间到二维空间的映射关系
%---------------------
subplot(2,clm,n-2)
line(reshape(vet(:,1),2,[]),reshape(vet(:,2),2,[])...
    ,'Color','b','LineWidth',2....
    ,'Marker','o','MarkerEdgeColor','r','MarkerFaceColor','g')
% %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 透视效果
%---------------------
%中心投影一般会产生n-2个灭点
%一般情况是将顶点坐标先旋转（otrh(rand(n))）和平移（每列都加相同常数）
%以上两种变换可以用齐次坐标运算
%然后选择一个简单的投影面（前两维坐标所确定的平面）
%            和焦点（在第三维坐标轴上的一点[0 0 k 0 0...])
%            按照顶点和焦点在第三维方向上的距离等比例缩放前两维坐标
%得到的新坐标即为高维的透视效果坐标
%以下的算法是保证立方体中心在投影正中的中心投影

%v=(vert-.5)*blkdiag(eye(2),orth(rand(n-2)));%（两个方向的棱平行投影平面，最少灭点）

%v=(vert-.5)*blkdiag(eye(1),orth(rand(n-1)));%（两个方向的棱平行投影平面，n-1个灭点）
v=(vert-.5)*orth(rand(n));%（任意旋转，n个灭点）
vet=diag(1./abs(v(:,3)-2))*v(:,[1,2]);%（选取的焦点坐标为[0 0 2 0 0 ....]）
%---------------------
subplot(2,clm,n-2+clm)
line(reshape(vet(:,1),2,[]),reshape(vet(:,2),2,[])...
    ,'Color','b','LineWidth',2....
    ,'Marker','o','MarkerEdgeColor','r','MarkerFaceColor','g')
end
% % %%
% % cla
% % vet=(vert-.5)*randn(n,3);%建立高维空间到3维空间的映射关系
% %  line(reshape(vet(:,1),2,[]),reshape(vet(:,2),2,[])...
% %      ,reshape(vet(:,3),2,[])...
% %      ,'Color','b','LineWidth',2....
% %      ,'Marker','o','MarkerEdgeColor','r','MarkerFaceColor','g')
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 也许有一些高能物理对象存在于高维空间，存在于低维空间（3，4维）人，仅仅只能观察到
%这些对象的投影和透视结果
% 从低维模型还原到高维实体还有一个应用是在图像识别领域。常常需要根据二维的图片，
%识别三维的物体
%当然高维到低维的映射是损失了某些维度的信息的，要取得比较好的还原结果，
%需要通过其他手段，补充信息

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 
% (平面)投影
% 
% 平行投影    正投影
%                     斜投影
% 中心投影(透视)   平行透视 n-2个灭点
% 
%                                                 n-1个灭点
% 
%                              成角透视   n个灭点